[versions]
agp = "8.2.2"
kotlin = "1.9.20"
compose = "1.6.7"
compose-material3 = "1.2.1"
androidx-activityCompose = "1.9.0"
composeNavigationVersion = "2.8.0-alpha08"
hiltVersion = "2.49"
hiltCompileVersion = "1.2.0"
lifecycle_version = "2.8.0"
glideVersion = "1.0.0-beta01"
retrofitVersion = "2.9.0"
retrofitInterceptorVersion = "4.9.2"
okHttpVersion="4.11.0"
materialVersion = "1.12.0"
kotlinXSerializationVersion = "1.6.3"
lottieVersion = "6.4.0"
roomVersion = "2.6.1"
coroutineCore = "1.7.3"
composeAnimation = "1.7.0-beta02"
testRunnerVersion = "1.5.2"
jUnitVersion = "4.13.2"
assertKVersion = "0.25"
turbineVersion = "0.7.0"
jUnitExtVersion="1.1.5"
mockVersion="4.9.0"
espressoVersion="3.5.1"
truthVersion="1.1.3"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
material-design = {module = "com.google.android.material:material", version.ref = "materialVersion"}
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigationVersion" }
compose-animation = { group = "androidx.compose.animation", name = "animation", version.ref = "composeAnimation" }
glide = { module = "com.github.bumptech.glide:compose", version.ref = "glideVersion" }

kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinXSerializationVersion" }

hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltVersion" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltVersion" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCompileVersion" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompileVersion" }

room-runtime = {module = "androidx.room:room-runtime" ,version.ref = "roomVersion"}
room-compiler = {module = "androidx.room:room-compiler" ,version.ref = "roomVersion"}
room-kotlin = {module = "androidx.room:room-ktx" ,version.ref = "roomVersion"}

lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieVersion" }

squareup-retrofit = {module = "com.squareup.retrofit2:retrofit" , version.ref = "retrofitVersion"}
squareup-converter = {module = "com.squareup.retrofit2:converter-gson" , version.ref = "retrofitVersion"}
squareup-interceptor = {module = "com.squareup.okhttp3:logging-interceptor" , version.ref = "retrofitInterceptorVersion"}
squareup-okhttp = {module = "com.squareup.okhttp3:okhttp" , version.ref = "okHttpVersion"}

#coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutineCore" }
coroutines-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
coroutines-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle_version" }
androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle_version" }

testing-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltVersion" }
testing-runner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testing-assertK = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertKVersion" }
testing-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbineVersion" }
testing-jUnit = { module = "junit:junit", version.ref = "jUnitVersion" }
testing-jUnit-ext = { module = "androidx.test.ext:junit", version.ref = "jUnitExtVersion" }
testing-composeTesting = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
testing-composeTestingManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
testing-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockVersion" }
testing-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoVersion" }
testing-truth = { module = "com.google.truth:truth", version.ref = "truthVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltVersion" }
